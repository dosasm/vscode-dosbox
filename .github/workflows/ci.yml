name: CI
on:
  push:
    branches:
      - "**"
    tags:
      - "v*"

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
      # fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: linux Install dosbox and dosbox-x tool
        run: |
          sudo apt-get update
          sudo apt-get install dosbox
          sudo apt install flatpak
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          sudo flatpak install flathub com.dosbox_x.DOSBox-X -y
        if: runner.os == 'Linux'
      - name: macOS Install dosbox and dosbox-x tool
        run: |
          brew update
          brew install dosbox
          brew install dosbox-x
        if: runner.os == 'macOS'

      - name: start xvfb for linux
        run: |
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo ">>> Started xvfb"
        if: runner.os == 'Linux'

      - uses: actions/checkout@v2
        with:
          submodules: true
          path: vscode-dosbox
      - name: install and test
        run: |
          yarn install
          yarn test && yarn test-local
        working-directory: ./vscode-dosbox
        env:
          DISPLAY: ":99.0"

      - name: Checkout masm-tasm repo
        uses: actions/checkout@v2
        with:
          repository: dosasm/masm-tasm
          path: masm-tasm

      - name: package
        run: node dev/package.js
        working-directory: ./vscode-dosbox

      - name: install and test
        run: |
          yarn
          yarn test && yarn test-web
        working-directory: ./masm-tasm
        env:
          DISPLAY: ":99.0"

  build:
    needs: test
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: install dependencies with yarn
        run: yarn install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package the extension
        run: node dev/package.js --all
      - uses: actions/upload-artifact@v2
        with:
          name: "vscepackages"
          path: "*.vsix"

      - run: npx vsce publish --packagePath $(find . -iname "*.vsix")
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        if: success() && startsWith( github.ref, 'refs/tags/')
